{
  "rules_metadata": {
    "eks_3_1_1": {
      "id": "eks_3_1_1",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "EKS", "CIS 3.1.1", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Amazon Elastic Kubernetes Service (EKS) Benchmark",
        "version": "v1.0.1"
      }
    },
    "eks_3_1_3": {
      "id": "eks_3_1_3",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "EKS", "CIS 3.1.3", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Amazon Elastic Kubernetes Service (EKS) Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_4_1_1": {
      "id": "k8s_4_1_1",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 4.1.1", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_5": {
      "id": "k8s_1_1_5",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.5", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_15": {
      "id": "k8s_1_1_15",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.15", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_7": {
      "id": "k8s_1_1_7",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.7", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_13": {
      "id": "k8s_1_1_13",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.13", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_1": {
      "id": "k8s_1_1_1",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.1", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_4_1_9": {
      "id": "k8s_4_1_9",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 4.1.9", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_4_1_5": {
      "id": "k8s_4_1_5",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 4.1.5", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_17": {
      "id": "k8s_1_1_17",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.17", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    },
    "k8s_1_1_3": {
      "id": "k8s_1_1_3",
      "name": "Minimize the admission of root containers (Automated)",
      "profile_applicability": "* Level 2\n",
      "description": "Do not generally permit containers to be run as the root user.\n",
      "rationale": "Containers may run as any Linux user. Containers which run as the root user, whilst constrained by Container Runtime security features still have a escalated likelihood of container breakout. Ideally, all containers should run as a defined non-UID 0 user. There should be at least one PodSecurityPolicy (PSP) defined which does not permit root users in a container. If you need to run root containers, this should be defined in a separate PSP and you should carefully check RBAC controls to ensure that only limited service accounts and users are given permission to access that PSP.\n",
      "audit": "Get the set of PSPs with the following command:\n```\nkubectl get psp\n```\nFor each PSP, check whether running containers as root is enabled:\n```\nkubectl get psp <name> -o=jsonpath='{.spec.runAsUser.rule}'\n```\nVerify that there is at least one PSP which returns `MustRunAsNonRoot` or `MustRunAs` with the\nrange of UIDs not including 0.\n",
      "remediation": "Create a PSP as described in the Kubernetes documentation, ensuring that the\n`.spec.runAsUser.rule` is set to either `MustRunAsNonRoot` or `MustRunAs` with the range of\nUIDs not including 0.\n",
      "impact": "Pods with containers which run as the root user will not be permitted.\n",
      "default_value": "By default, PodSecurityPolicies are not defined.\n",
      "references": "1. https://kubernetes.io/docs/concepts/policy/pod-security-policy/#enabling-pod-security-policies\n",
      "section": "Pod Security Policies",
      "version": "1.0",
      "tags": ["CIS", "Kubernetes", "CIS 1.1.3", "Pod Security Policies"],
      "benchmark": {
        "name": "CIS Kubernetes V1.23 Benchmark",
        "version": "v1.0.1"
      }
    }
  }
}
